/* breakpoints */
@mixin breakpoint($point) {
    @if $point==desktop {
        @media screen and(min-width: $screen-lg) {
            @content;
        }
    }

    @else if $point==mobile {
        @media screen and(max-width: $screen-sm) {
            @content;
        }
    }
}

/* vw conversion */
@mixin vw-convert-pc($property, $pc-pixel) {
    @if type-of($pc-pixel)==number {
        #{$property}: $pc-pixel*1px;
        #{$property}: $pc-pixel*100/1440*1vw;

        @media (min-width:$screen-xlg) {
            #{$property}: $pc-pixel*1px;
        }
    }

    @else if type-of($pc-pixel)==string {
        #{$property}: auto;

        @media (min-width:$screen-xlg) {
            #{$property}: auto;
        }
    }

    @else if type-of($pc-pixel)==list {
        $px: ();
        $vw: ();

        @each $value in $pc-pixel {
            @if type-of($value)==number {
                $px: append($px, $value*1px);
                $vw: append($vw, $value*100/1440*1vw);
            }

            @else if type-of($value)==string {
                $px: append($px, auto);
                $vw: append($vw, auto);
            }
        }

        #{$property}: $px;
        #{$property}: $vw;

        $px: ();

        @each $value in $pc-pixel {
            @if type-of($value)==number {
                $px: append($px, $value*1px);
            }

            @else if type-of($value)==string {
                $px: append($px, auto);
            }
        }

        @media (min-width:$screen-xlg) {
            #{$property}: $px;
        }
    }
}

// vw conversion Mobile
@mixin vw-convert-mo($property, $mo-pixel) {
    @if type-of($mo-pixel)==number {
        #{$property}: $mo-pixel/360*767*1px;
        #{$property}: $mo-pixel*100/360*1vw;

        @media (max-width:360px) {
            #{$property}: $mo-pixel*1px;
            #{$property}: $mo-pixel*100/360*1vw;
        }
    }

    @else if type-of($mo-pixel)==string {
        #{$property}: auto;

        @media (max-width:360px) {
            #{$property}: auto;
        }
    }

    @else if type-of($mo-pixel)==list {
        $px: ();
        $vw: ();

        @each $value in $mo-pixel {
            @if type-of($value)==number {
                $px: append($px, $value/360*767*1px);
                $vw: append($vw, $value*100/360*1vw);
            }

            @else if type-of($value)==string {
                $px: append($px, auto);
                $vw: append($vw, auto);
            }
        }

        #{$property}:$px;
        #{$property}:$vw;

        $px: ();
        $vw: ();

        @each $value in $mo-pixel {
            @if type-of($value)==number {
                $px: append($px, $value*1px);
                $vw: append($vw, $value*100/360*1vw);
            }

            @else if type-of($value)==string {
                $px: append($px, auto);
                $vw: append($vw, auto);
            }
        }

        @media (max-width:360px) {
            #{$property}: $px;
            #{$property}: $vw;
        }
    }
}

@mixin absolute-full {
    position: absolute;
    top: 0;
    right: 0;
    left: 0;
    bottom: 0;
}

@mixin clearfix {

    &:before,
    &:after {
        content: '';
        display: block;
        clear: both;
    }
}